(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{1041:function(t,s,a){t.exports=a.p+"assets/img/12.21db075e.png"},1042:function(t,s,a){t.exports=a.p+"assets/img/13.2bd4c7e8.png"},1043:function(t,s,a){t.exports=a.p+"assets/img/14.fe1b2804.png"},1044:function(t,s,a){t.exports=a.p+"assets/img/15.44b81d70.png"},2444:function(t,s,a){"use strict";a.r(s);var n=a(21),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"mysql多表"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mysql多表"}},[t._v("#")]),t._v(" MySQL多表")]),t._v(" "),n("h2",{attrs:{id:"第一章-数据库三范式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第一章-数据库三范式"}},[t._v("#")]),t._v(" 第一章 数据库三范式")]),t._v(" "),n("p",[t._v("好的数据库设计对数据的存储性能和后期的程序开发，都会产生重要的影响。建立科学的，规范的数据库就需要满足一些规则来优化数据的设计和存储，这些规则就称为范式。")]),t._v(" "),n("h3",{attrs:{id:"_1-1-第一范式-确保每列保持原子性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-第一范式-确保每列保持原子性"}},[t._v("#")]),t._v(" 1.1 第一范式: "),n("strong",[t._v("确保每列保持原子性")])]),t._v(" "),n("p",[t._v("第一范式是最基本的范式。如果数据库表中的所有字段值都是不可分解的原子值，就说明该数据库表满足了第一范式。")]),t._v(" "),n("p",[t._v("第一范式的合理遵循需要根据系统的实际需求来定。比如某些数据库系统中需要用到“地址”这个属性，本来直接将“地址”属性设计成一个数据库表的字段就行。但是如果系统经常会访问“地址”属性中的“城市”部分，那么就非要将“地址”这个属性重新拆分为省份、城市、详细地址等多个部分进行存储，这样在对地址中某一部分操作的时候将非常方便。这样设计才算满足了数据库的第一范式，如下表所示。")]),t._v(" "),n("p",[n("img",{staticClass:"lazy",attrs:{alt:"images","data-src":a(1041),loading:"lazy"}})]),t._v(" "),n("p",[t._v("如果不遵守第一范式，查询出数据还需要进一步处理（查询不方便）。遵守第一范式，需要什么字段的数据就查询什么数据（方便查询）")]),t._v(" "),n("h3",{attrs:{id:"_1-2-第二范式-确保表中的每列都和主键相关"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-第二范式-确保表中的每列都和主键相关"}},[t._v("#")]),t._v(" 1.2 第二范式: "),n("strong",[t._v("确保表中的每列都和主键相关")])]),t._v(" "),n("p",[t._v("第二范式在第一范式的基础之上更进一层。第二范式需要确保数据库表中的每一列都和主键相关，而不能只与主键的某一部分相关（主要针对联合主键而言）。也就是说在一个数据库表中，一个表中只能保存一种数据，不可以把多种数据保存在同一张数据库表中。")]),t._v(" "),n("p",[t._v("比如要设计一个订单信息表，因为订单中可能会有多种商品，所以要将订单编号和商品编号作为数据库表的联合主键，如下表所示")]),t._v(" "),n("p",[n("img",{staticClass:"lazy",attrs:{alt:"images","data-src":a(1042),loading:"lazy"}})]),t._v(" "),n("p",[t._v("这样就产生一个问题：这个表中是以订单编号和商品编号作为联合主键。这样在该表中商品名称、单位、商品价格等信息不与该表的主键相关，而仅仅是与商品编号相关。所以在这里违反了第二范式的设计原则。")]),t._v(" "),n("p",[t._v("而如果把这个订单信息表进行拆分，把商品信息分离到另一个表中，把订单项目表也分离到另一个表中，就非常完美了。如下所示")]),t._v(" "),n("img",{staticStyle:{zoom:"67%"},attrs:{src:"imgs/tu_13.png"}}),t._v(" "),n("p",[t._v("这样设计，在很大程度上减小了数据库的冗余。如果要获取订单的商品信息，使用商品编号到商品信息表中查询即可")]),t._v(" "),n("h3",{attrs:{id:"_1-3-第三范式-确保每列都和主键列直接相关-而不是间接相关"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-第三范式-确保每列都和主键列直接相关-而不是间接相关"}},[t._v("#")]),t._v(" 1.3 第三范式: "),n("strong",[t._v("确保每列都和主键列直接相关,而不是间接相关")])]),t._v(" "),n("p",[t._v("第三范式需要确保数据表中的每一列数据都和主键直接相关，而不能间接相关。")]),t._v(" "),n("p",[t._v("比如在设计一个订单数据表的时候，可以将客户编号作为一个外键和订单表建立相应的关系。而不可以在订单表中添加关于客户其它信息（比如姓名、所属公司等）的字段。如下面这两个表所示的设计就是一个满足第三范式的数据库表。")]),t._v(" "),n("img",{staticStyle:{zoom:"67%"},attrs:{src:"imgs/tu_14.png"}}),t._v(" "),n("p",[t._v("这样在查询订单信息的时候，就可以使用客户编号来引用客户信息表中的记录，也不必在订单信息表中多次输入客户信息的内容，减小了数据冗余")]),t._v(" "),n("h2",{attrs:{id:"第二章-外键约束"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第二章-外键约束"}},[t._v("#")]),t._v(" 第二章 外键约束")]),t._v(" "),n("h3",{attrs:{id:"_2-1-外键约束的概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-外键约束的概念"}},[t._v("#")]),t._v(" 2.1 外键约束的概念")]),t._v(" "),n("p",[t._v("在遵循三范式的前提下，很多时候我们必须要进行拆表，将数据分别存放在多张表中，以减少冗余数据。但是拆分出来的表与表之间是有着关联关系的，我们必须得通过一种约束来约定表与表之间的关系，这种约束就是外键约束")]),t._v(" "),n("h3",{attrs:{id:"_2-2-外键约束的作用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-外键约束的作用"}},[t._v("#")]),t._v(" 2.2 外键约束的作用")]),t._v(" "),n("p",[t._v("外键约束是保证一个或两个表之间的参照完整性,外键是构建于一个表的两个字段或是两个表的两个字段之间的参照关系。")]),t._v(" "),n("h3",{attrs:{id:"_2-3-创建外键约束的语法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-创建外键约束的语法"}},[t._v("#")]),t._v(" 2.3 创建外键约束的语法")]),t._v(" "),n("h4",{attrs:{id:"_2-3-1-在建表时指定外键约束"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-1-在建表时指定外键约束"}},[t._v("#")]),t._v(" 2.3.1 在建表时指定外键约束")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("数据名"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("从表名"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t字段名"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" 数据类型  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t字段名"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" 数据类型 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constraint")]),t._v(" 外键约束名"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("foreign")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("从表字段"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("references")]),t._v(" 主表名"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("主表字段"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" 外键约束等级"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" 外键约束等级"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#外键只能在所有字段列表后面单独指定")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果要自己命名外键约束名，建议 主表名_从表名_关联字段名_fk")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h4",{attrs:{id:"_2-3-2-在建表后指定外键约束"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-2-在建表后指定外键约束"}},[t._v("#")]),t._v(" 2.3.2 在建表后指定外键约束")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alter")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" 从表名称 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constraint")]),t._v(" 外键约束名"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("foreign")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("从表字段名"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("references")]),t._v(" 主表名"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("主表被参照字段名"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" xx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" xx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h3",{attrs:{id:"_2-4-删除外键约束的语法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-删除外键约束的语法"}},[t._v("#")]),t._v(" 2.4 删除外键约束的语法")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" 表名称 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOREIGN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" 外键约束名"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看约束名 SELECT * FROM information_schema.table_constraints WHERE table_name = '表名称';")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#删除外键约束不会删除对应的索引，如果需要删除索引，需要用ALTER TABLE 表名称 DROP INDEX 索引名;")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看索引名 show index from 表名称;")]),t._v("\n")])])]),n("h3",{attrs:{id:"_2-5-外键约束的要求"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-外键约束的要求"}},[t._v("#")]),t._v(" 2.5 外键约束的要求")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("在从表上建立外键，而且主表要先存在。")])]),t._v(" "),n("li",[n("p",[t._v("一个表可以建立多个外键约束")])]),t._v(" "),n("li",[n("p",[t._v("通常情况下，从表的外键列一定要指向主表的主键列")])]),t._v(" "),n("li",[n("p",[t._v("从表的外键列与主表被参照的列名字可以不相同，但是数据类型必须一样")])])]),t._v(" "),n("h3",{attrs:{id:"_2-6-外键约束等级"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-外键约束等级"}},[t._v("#")]),t._v(" 2.6 外键约束等级")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("Cascade方式：在主表上update/delete记录时，同步update/delete掉从表的匹配记录")])]),t._v(" "),n("li",[n("p",[t._v("Set null方式：在主表上update/delete记录时，将从表上匹配记录的列设为null，但是要注意子表的外键列不能为not null")])]),t._v(" "),n("li",[n("p",[t._v("No action方式：如果子表中有匹配的记录,则不允许对父表对应候选键进行update/delete操作")])]),t._v(" "),n("li",[n("p",[t._v("Restrict方式：同no action, 都是立即检查外键约束")])]),t._v(" "),n("li",[n("p",[t._v("Set default方式（在可视化工具SQLyog中可能显示空白）：父表有变更时,子表将外键列设置成一个默认的值，但Innodb不能识别")]),t._v(" "),n("p",[t._v("如果没有指定等级，就相当于Restrict方式")])])]),t._v(" "),n("h3",{attrs:{id:"_2-7-外键约束练习"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-外键约束练习"}},[t._v("#")]),t._v(" 2.7 外键约束练习")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 部门表")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" dept"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" \n\tid "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tdept_name "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tdept_location "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 员工表")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" emp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\teid "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tname "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tsex "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    dept_id "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 给员工表表的dept_id添加外键指向部门表的主键")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alter")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" emp "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("foreign")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dept_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("references")]),t._v(" dept"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h2",{attrs:{id:"第三章-多表间关系"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第三章-多表间关系"}},[t._v("#")]),t._v(" 第三章 多表间关系")]),t._v(" "),n("h3",{attrs:{id:"_3-1-一对多关系"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-一对多关系"}},[t._v("#")]),t._v(" 3.1 一对多关系")]),t._v(" "),n("h4",{attrs:{id:"_3-1-1-概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-1-概念"}},[t._v("#")]),t._v(" 3.1.1 概念")]),t._v(" "),n("p",[t._v("一对多的关系是指: 主表的一行数据可以同时对应从表的多行数据，反过来就是从表的多行数据指向主表的同一行数据。")]),t._v(" "),n("h4",{attrs:{id:"_3-1-2-应用场景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-2-应用场景"}},[t._v("#")]),t._v(" 3.1.2 应用场景")]),t._v(" "),n("p",[t._v("分类表和商品表、班级表和学生表、用户表和订单表等等")]),t._v(" "),n("h4",{attrs:{id:"_3-1-2-建表原则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-2-建表原则"}},[t._v("#")]),t._v(" 3.1.2 建表原则")]),t._v(" "),n("p",[t._v("将一的一方作为主表，多的一方作为从表，在从表中指定一个字段作为外键，指向主表的主键")]),t._v(" "),n("p",[n("img",{staticClass:"lazy",attrs:{alt:"images","data-src":a(1043),loading:"lazy"}})]),t._v(" "),n("h4",{attrs:{id:"_3-1-3-建表语句练习"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-3-建表语句练习"}},[t._v("#")]),t._v(" 3.1.3 建表语句练习")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 创建分类表")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" category"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tcid "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AUTO_INCREMENT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tcname "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 创建商品表")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" product"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tpid "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AUTO_INCREMENT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tpname "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tprice "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DOUBLE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tcid "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 给商品表添加一个外键")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alter")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" product "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("foreign")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("references")]),t._v("  category"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("alter table 从表名称 add [constraint 外键约束名] foreign key (从表字段名) references 主表名(主表被参照字段名) [on update xx][on delete xx];\n")])])]),n("h3",{attrs:{id:"_3-2-多对多关系"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-多对多关系"}},[t._v("#")]),t._v(" 3.2 多对多关系")]),t._v(" "),n("h4",{attrs:{id:"_3-2-1-概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-概念"}},[t._v("#")]),t._v(" 3.2.1 概念")]),t._v(" "),n("p",[t._v("两张表都是多的一方，A表的一行数据可以同时对应B表的多行数据，反之B表的一行数据也可以同时对应A表的多行数据")]),t._v(" "),n("h4",{attrs:{id:"_3-2-2-应用场景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-2-应用场景"}},[t._v("#")]),t._v(" 3.2.2 应用场景")]),t._v(" "),n("p",[t._v("订单表和商品表、学生表和课程表等等")]),t._v(" "),n("h4",{attrs:{id:"_3-2-3-建表原则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-3-建表原则"}},[t._v("#")]),t._v(" 3.2.3 建表原则")]),t._v(" "),n("p",[t._v("因为两张表都是多的一方，所以在两张表中都无法创建外键，所以需要新创建一张中间表，在中间表中定义两个字段，这俩字段分别作为外键指向两张表各自的主键")]),t._v(" "),n("p",[n("img",{staticClass:"lazy",attrs:{alt:"images","data-src":a(1044),loading:"lazy"}})]),t._v(" "),n("h4",{attrs:{id:"_3-2-4-建表语句练习"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-4-建表语句练习"}},[t._v("#")]),t._v(" 3.2.4 建表语句练习")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 创建学生表")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" student"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tsid "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AUTO_INCREMENT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tsname "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 创建课程表")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" course"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tcid "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AUTO_INCREMENT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tcname "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 创建中间表")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" s_c_table"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tsno "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tcno "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 给sno字段添加外键指向student表的sid主键")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" s_c_table "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ADD")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" fkey01 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOREIGN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REFERENCES")]),t._v(" student"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 给cno字段添加外键指向course表的cid主键")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" s_c_table "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ADD")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" fkey03 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOREIGN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REFERENCES")]),t._v(" course"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h3",{attrs:{id:"_3-3-一对一关系-了解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-一对一关系-了解"}},[t._v("#")]),t._v(" 3.3 一对一关系(了解)")]),t._v(" "),n("h4",{attrs:{id:"_3-3-1-第一种一对一关系"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-1-第一种一对一关系"}},[t._v("#")]),t._v(" 3.3.1 第一种一对一关系")]),t._v(" "),n("p",[t._v("我们之前学习过一对多关系，在一对多关系中主表的一行数据可以对应从表的多行数据，反之从表的一行数据则只能对应主表的一行数据。这种一行数据对应一行数据的关系，我们可以将其看作一对一关系")]),t._v(" "),n("h4",{attrs:{id:"_3-3-2-第二种一对一关系"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-2-第二种一对一关系"}},[t._v("#")]),t._v(" 3.3.2 第二种一对一关系")]),t._v(" "),n("p",[t._v("A表中的一行数据对应B表中的一行数据，反之B表中的一行数据也对应A表中的一行数据，此时我们可以将A表当做主表B表当做从表，或者是将B表当做主表A表当做从表")]),t._v(" "),n("h5",{attrs:{id:"_3-3-2-1-建表原则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-2-1-建表原则"}},[t._v("#")]),t._v(" 3.3.2.1 建表原则")]),t._v(" "),n("p",[t._v("在从表中指定一个字段创建外键并指向主表的主键，然后给从表的外键字段添加唯一约束")]),t._v(" "),n("h2",{attrs:{id:"第三章-多表关联查询"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第三章-多表关联查询"}},[t._v("#")]),t._v(" 第三章 多表关联查询")]),t._v(" "),n("p",[t._v("多表关联查询是使用一条SQL语句，将关联的多张表的数据查询出来")]),t._v(" "),n("h3",{attrs:{id:"_3-1-环境准备"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-环境准备"}},[t._v("#")]),t._v(" 3.1 环境准备")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 创建一张分类表(类别id,类别名称.备注:类别id为主键并且自动增长)")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" t_category"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t\tcid "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto_increment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tcname "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" t_category "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'手机数码'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" t_category "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'食物'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" t_category "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'鞋靴箱包'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 创建一张商品表(商品id,商品名称,商品价格,商品数量,类别.备注:商品id为主键并且自动增长)")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" t_product"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t\tpid "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto_increment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tpname "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tprice "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DOUBLE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tnum "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tcno "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t_product "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'苹果电脑'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("18000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t_product "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'iPhone8s'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5500")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t_product "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'iPhone7'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t_product "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'iPhone6s'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4500")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t_product "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'iPhone6'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3800")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t_product "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'iPhone5s'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t_product "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'iPhone4s'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("18000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t_product "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'方便面'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t_product "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'咖啡'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t_product "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'矿泉水'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t_product "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'法拉利'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 给 商品表添加外键")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" t_product "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ADD")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOREIGN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REFERENCES")]),t._v(" t_category"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h3",{attrs:{id:"_3-2-交叉查询【了解】"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-交叉查询【了解】"}},[t._v("#")]),t._v(" 3.2 交叉查询【了解】")]),t._v(" "),n("p",[t._v("交叉查询其实就是将多张表的数据没有条件地连接在一起进行展示")]),t._v(" "),n("h4",{attrs:{id:"_3-2-1-语法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-语法"}},[t._v("#")]),t._v(" 3.2.1 语法")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("列"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("列"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("列"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("列 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--或者 ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h4",{attrs:{id:"_3-2-2-练习"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-2-练习"}},[t._v("#")]),t._v(" 3.2.2 练习")]),t._v(" "),n("p",[t._v("使用交叉查询类别和商品")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("select * from t_category,t_product;\n")])])]),n("p",[t._v("通过查询结果我们可以看到，交叉查询其实是一种错误的做法，在查询到的结果集中有大量的错误数据，我们称交叉查询到的结果集是笛卡尔积")]),t._v(" "),n("h4",{attrs:{id:"_3-2-3-笛卡尔积"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-3-笛卡尔积"}},[t._v("#")]),t._v(" 3.2.3 笛卡尔积")]),t._v(" "),n("p",[t._v("假设集合A={a,b}，集合B={0,1,2}，则两个集合的笛卡尔积为{(a,0),(a,1),(a,2),(b,0),(b,1),(b,2)}。可以扩展到多个集合的情况。")]),t._v(" "),n("h3",{attrs:{id:"_3-3-内连接查询"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-内连接查询"}},[t._v("#")]),t._v(" 3.3 内连接查询")]),t._v(" "),n("p",[t._v("交叉查询产生这样的结果并不是我们想要的，那么怎么去除错误的、不想要的记录呢，当然是通过条件过滤。通常要查询的多个表之间都存在关联关系，那么就通过**关联关系(主外键关系)**去除笛卡尔积。这种通过条件过滤去除笛卡尔积的查询，我们称之为连接查询。连接查询又可以分为内连接查询和外连接查询，我们先学习内连接查询")]),t._v(" "),n("h4",{attrs:{id:"_3-3-1-隐式内连接查询"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-1-隐式内连接查询"}},[t._v("#")]),t._v(" 3.3.1 隐式内连接查询")]),t._v(" "),n("p",[t._v("隐式内连接查询里面是没有inner join关键字")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("字段"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("字段"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("字段"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" 连接条件 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b表里面的外键 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a表里面的主键 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),n("h4",{attrs:{id:"_3-3-2-显示内连接查询"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-2-显示内连接查询"}},[t._v("#")]),t._v(" 3.3.2 显示内连接查询")]),t._v(" "),n("p",[t._v("显式内连接查询里面是有inner join关键字")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("字段"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("字段"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("字段"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 主表 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("inner")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" 从表 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" 连接条件 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" 其它条件"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),n("h4",{attrs:{id:"_3-3-3-内连接查询练习"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-3-内连接查询练习"}},[t._v("#")]),t._v(" 3.3.3 内连接查询练习")]),t._v(" "),n("p",[t._v("查询所有类别下的商品信息,如果该类别下没有商品则不展示")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 2.1 隐式内连接方式 ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t_category  c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" t_product  p "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cid "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查询手机数码这个分类下的所有商品的信息以及分类信息")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_product tp "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INNER")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" t_category tc "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" tp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cno "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cid "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" tc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cname "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'手机数码'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 2.2 显示内连接方式  ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t_category c "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INNER")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" t_product p "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cid "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cno\n")])])]),n("h4",{attrs:{id:"_3-3-4-内连接查询的特点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-4-内连接查询的特点"}},[t._v("#")]),t._v(" 3.3.4 内连接查询的特点")]),t._v(" "),n("p",[t._v("主表和从表中的数据都是满足连接条件则能够查询出来，不满足连接条件则不会查询出来")]),t._v(" "),n("h3",{attrs:{id:"_3-4-外连接查询"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-外连接查询"}},[t._v("#")]),t._v(" 3.4 外连接查询")]),t._v(" "),n("p",[t._v("我们发现内连接查询出来的是满足连接条件的公共部分， 如果要保证查询出某张表的全部数据情况下进行连接查询. 那么就要使用外连接查询了.  外连接分为左外连接和右外连接")]),t._v(" "),n("h4",{attrs:{id:"_3-4-1-左外连接查询"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-1-左外连接查询"}},[t._v("#")]),t._v(" 3.4.1 左外连接查询")]),t._v(" "),n("h5",{attrs:{id:"_3-4-1-1-概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-1-1-概念"}},[t._v("#")]),t._v(" 3.4.1.1 概念")]),t._v(" "),n("p",[t._v("以join左边的表为主表,展示主表的所有数据,根据条件查询连接右边表的数据,若满足条件则展示,若不满足则以null显示。可以理解为："),n("strong",[t._v("在内连接的基础上保证左边表的数据全部显示")])]),t._v(" "),n("h5",{attrs:{id:"_3-4-1-2-语法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-1-2-语法"}},[t._v("#")]),t._v(" 3.4.1.2 语法")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" 字段 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("left")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("outer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" 条件\n")])])]),n("h5",{attrs:{id:"_3-4-1-3-练习"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-1-3-练习"}},[t._v("#")]),t._v(" 3.4.1.3 练习")]),t._v(" "),n("p",[t._v("查询所有类别下的商品信息，就算该类别下没有商品也需要将该类别的信息展示出来")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_category c "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEFT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("OUTER")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" t_product p "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cid "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cno\n")])])]),n("h4",{attrs:{id:"_3-4-2-右外连接查询"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-2-右外连接查询"}},[t._v("#")]),t._v(" 3.4.2 右外连接查询")]),t._v(" "),n("h5",{attrs:{id:"_3-4-2-1-概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-2-1-概念"}},[t._v("#")]),t._v(" 3.4.2.1 概念")]),t._v(" "),n("p",[t._v("以join右边的表为主表,展示右边表的所有数据,根据条件查询join左边表的数据,若满足则展示,若不满足则以null显示。可以理解为："),n("strong",[t._v("在内连接的基础上保证右边表的数据全部显示")])]),t._v(" "),n("h5",{attrs:{id:"_3-4-2-2-语法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-2-2-语法"}},[t._v("#")]),t._v(" 3.4.2.2 语法")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" 字段 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("right")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("outer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" 条件\n")])])]),n("h5",{attrs:{id:"_3-4-2-3-练习"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-2-3-练习"}},[t._v("#")]),t._v(" 3.4.2.3 练习")]),t._v(" "),n("p",[t._v("查询所有商品所对应的类别信息")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_category c "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RIGHT")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("OUTER")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" t_product p "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cid "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cno\n")])])]),n("h3",{attrs:{id:"_3-5-union联合查询实现全外连接查询"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-union联合查询实现全外连接查询"}},[t._v("#")]),t._v(" 3.5 union联合查询实现全外连接查询")]),t._v(" "),n("p",[t._v("首先要明确，联合查询不是多表连接查询的一种方式。联合查询是将多条查询语句的查询结果合并成一个结果并去掉重复数据。")]),t._v(" "),n("p",[t._v("全外连接查询的意思就是将左表和右表的数据都查询出来，然后按照连接条件连接")]),t._v(" "),n("h4",{attrs:{id:"_3-5-1-union的语法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-1-union的语法"}},[t._v("#")]),t._v(" 3.5.1 union的语法")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[t._v("查询语句"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("union")]),t._v(" 查询语句"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("union")]),t._v(" 查询语句"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),n("h4",{attrs:{id:"_3-5-2-练习"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-2-练习"}},[t._v("#")]),t._v(" 3.5.2 练习")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 用左外的A union 右外的B")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_category c "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEFT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("OUTER")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" t_product p "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cid "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cno\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("union")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_category c "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RIGHT")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("OUTER")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" t_product p "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cid "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cno\n")])])]),n("h3",{attrs:{id:"_3-6-自连接查询"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-自连接查询"}},[t._v("#")]),t._v(" 3.6 自连接查询")]),t._v(" "),n("p",[t._v("自连接查询是一种特殊的多表连接查询，因为两个关联查询的表是同一张表，通过取别名的方式来虚拟成两张表，然后进行两张表的连接查询")]),t._v(" "),n("h4",{attrs:{id:"_3-6-1-准备工作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-1-准备工作"}},[t._v("#")]),t._v(" 3.6.1 准备工作")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 员工表")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" emp "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  id "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 员工id")]),t._v("\n  ename "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 员工姓名")]),t._v("\n  mgr "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 上级领导")]),t._v("\n  joindate "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DATE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 入职日期")]),t._v("\n  salary "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECIMAL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 工资")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 添加员工")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" emp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("ename"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("mgr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("joindate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("salary"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1001")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'孙悟空'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1004")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2000-12-17'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'8000.00'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1002")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'卢俊义'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1006")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2001-02-20'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'16000.00'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1003")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'林冲'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1006")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2001-02-22'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'12500.00'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1004")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'唐僧'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1009")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2001-04-02'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'29750.00'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1005")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'李逵'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1006")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2001-09-28'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'12500.00'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1006")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'宋江'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1009")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2001-05-01'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'28500.00'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1007")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'刘备'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1009")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2001-09-01'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'24500.00'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1008")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'猪八戒'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1004")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2007-04-19'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'30000.00'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1009")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'罗贯中'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2001-11-17'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'50000.00'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1010")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'吴用'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1006")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2001-09-08'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'15000.00'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1011")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'沙僧'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1004")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2007-05-23'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'11000.00'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1012")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'李逵'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1006")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2001-12-03'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'9500.00'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1013")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'小白龙'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1004")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2001-12-03'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'30000.00'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1014")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'关羽'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1007")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2002-01-23'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'13000.00'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h4",{attrs:{id:"_3-6-2-自连接查询练习"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-2-自连接查询练习"}},[t._v("#")]),t._v(" 3.6.2 自连接查询练习")]),t._v(" "),n("p",[t._v("查询员工的编号，姓名，薪资和他领导的编号，姓名，薪资")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#这些数据全部在员工表中")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#把t_employee表，即当做员工表，又当做领导表")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#领导表是虚拟的概念，我们可以通过取别名的方式虚拟")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" employee"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"员工的编号"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("emp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ename "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"员工的姓名"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("emp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("salary "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"员工的薪资"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tmanager"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"领导的编号"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("manager"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ename "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"领导的姓名"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("manager"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("salary "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"领导的薪资"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" emp employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INNER")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" emp manager\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#emp employee：employee.，表示的是员工表的")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#emp manager：如果用manager.，表示的是领导表的")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" employee"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mgr "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" manager"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 员工的mgr指向上级的id")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#表的别名不要加""，给列取别名，可以用""，列的别名不使用""也可以，但是要避免包含空格等特殊符号。')]),t._v("\n")])])]),n("h2",{attrs:{id:"第四章-子查询"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第四章-子查询"}},[t._v("#")]),t._v(" 第四章 子查询")]),t._v(" "),n("p",[t._v("如果一个查询语句嵌套在另一个查询语句里面，那么这个查询语句就称之为子查询，根据位置不同，分为：where型，from型，exists型。注意：不管子查询在哪里，子查询必须使用()括起来。")]),t._v(" "),n("h3",{attrs:{id:"_4-1-where型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-where型"}},[t._v("#")]),t._v(" 4.1 where型")]),t._v(" "),n("p",[t._v("①子查询是单值结果，那么可以对其使用（=，>等比较运算符）")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 查询价格最高的商品信息")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t_product "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" price "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("price"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t_product"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("②子查询是多值结果，那么可对其使用（【not】in(子查询结果)，或 >all(子查询结果)，或>=all(子查询结果)，<all(子查询结果)，<=all（子查询结果)，或 >any(子查询结果)，或>=any(子查询结果)，<any(子查询结果)，<=any（子查询结果)）")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 查询价格最高的商品信息")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_product "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" price "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" price "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_product"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h3",{attrs:{id:"_2、from型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、from型"}},[t._v("#")]),t._v(" 2、from型")]),t._v(" "),n("p",[t._v("子查询的结果是多行多列的结果，类似于一张表格。")]),t._v(" "),n("p",[t._v("必须给子查询取别名，即临时表名，表的别名不要加“”和空格。")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 思路一: 使用连接查询")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 使用外连接，查询出分类表的所有数据")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" tc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_category tc "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEFT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" t_product tp "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" tp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cno "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cid "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" tc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cname\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 思路二: 使用子查询")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 第一步:对t_product根据cno进行分组查询，统计每个分类的商品数量")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" cno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_product "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" cno\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 第二步: 用t_category表去连接第一步查询出来的结果，进行连接查询,此时要求查询出所有的分类")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" tc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("IFNULL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("total"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'总数量'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_category tc "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEFT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" cno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" total "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_product "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" cno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" tn "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" tn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cno"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("tc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cid\n")])])]),n("h3",{attrs:{id:"_3、exists型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3、exists型"}},[t._v("#")]),t._v(" 3、exists型")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 查询那些有商品的分类")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" cid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("cname "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_category tc "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_product tp "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" tp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cno "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n")])])]),n("p",[t._v("v")])])}),[],!1,null,null,null);s.default=e.exports}}]);