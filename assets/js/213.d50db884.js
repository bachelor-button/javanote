(window.webpackJsonp=window.webpackJsonp||[]).push([[213],{2470:function(t,a,n){"use strict";n.r(a);var e=n(21),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"nginx面试题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx面试题"}},[t._v("#")]),t._v(" nginx面试题")]),t._v(" "),n("blockquote",[n("p",[t._v("本文由 "),n("a",{attrs:{href:"http://ksria.com/simpread/",target:"_blank",rel:"noopener noreferrer"}},[t._v("简悦 SimpRead"),n("OutboundLink")],1),t._v(" 转码， 原文地址 "),n("a",{attrs:{href:"https://www.nginx.org.cn/article/detail/451",target:"_blank",rel:"noopener noreferrer"}},[t._v("www.nginx.org.cn"),n("OutboundLink")],1)])]),t._v(" "),n("blockquote",[n("p",[t._v("什么是 Nginx？Nginx 是一个 轻量级 / 高性能的反向代理 Web 服务器，他实现非常高效的反向代理、负载平衡，他可以处理 2-3 万并发连接数，官方监测能...")])]),t._v(" "),n("h3",{attrs:{id:"什么是-nginx"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是-nginx"}},[t._v("#")]),t._v(" 什么是 Nginx？")]),t._v(" "),n("ul",[n("li",[t._v("Nginx 是一个 轻量级 / 高性能的反向代理 Web 服务器，他实现非常高效的反向代理、负载平衡，他可以处理 2-3 万并发连接数，官方监测能支持 5 万并发，现在中国使用 nginx 网站用户有很多，例如：新浪、网易、 腾讯等。")])]),t._v(" "),n("h3",{attrs:{id:"为什么要用-nginx"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为什么要用-nginx"}},[t._v("#")]),t._v(" 为什么要用 Nginx？")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("跨平台、配置简单、方向代理、高并发连接：处理 2-3 万并发连接数，官方监测能支持 5 万并发，内存消耗小：开启 10 个 nginx 才占 150M 内存 ，nginx 处理静态文件好，耗费内存少，")])]),t._v(" "),n("li",[n("p",[t._v("而且 Nginx 内置的健康检查功能：如果有一个服务器宕机，会做一个健康检查，再发送的请求就不会发送到宕机的服务器了。重新将请求提交到其他的节点上。")])]),t._v(" "),n("li",[n("p",[t._v("使用 Nginx 的话还能：")]),t._v(" "),n("ol",[n("li",[t._v("节省宽带：支持 GZIP 压缩，可以添加浏览器本地缓存")]),t._v(" "),n("li",[t._v("稳定性高：宕机的概率非常小")]),t._v(" "),n("li",[t._v("接收用户请求是异步的")])])])]),t._v(" "),n("h3",{attrs:{id:"为什么-nginx-性能这么高"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为什么-nginx-性能这么高"}},[t._v("#")]),t._v(" 为什么 Nginx 性能这么高？")]),t._v(" "),n("ul",[n("li",[t._v("因为他的事件处理机制：异步非阻塞事件处理机制：运用了 epoll 模型，提供了一个队列，排队解决")])]),t._v(" "),n("h3",{attrs:{id:"nginx-怎么处理请求的"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx-怎么处理请求的"}},[t._v("#")]),t._v(" Nginx 怎么处理请求的？")]),t._v(" "),n("ul",[n("li",[t._v("nginx 接收一个请求后，首先由 listen 和 server_name 指令匹配 server 模块，再匹配 server 模块里的 location，location 就是实际地址")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("    server {\n        listen       80；\n        server_name  localhost；\n        location / {\n            root   html；\n            index  index.html index.htm；\n        }\n    }\n复制代码\n\n")])])]),n("h3",{attrs:{id:"什么是正向代理和反向代理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是正向代理和反向代理"}},[t._v("#")]),t._v(" 什么是正向代理和反向代理？")]),t._v(" "),n("ol",[n("li",[t._v("正向代理就是一个人发送一个请求直接就到达了目标的服务器")]),t._v(" "),n("li",[t._v("反方代理就是请求统一被 Nginx 接收，nginx 反向代理服务器接收到之后，按照一定的规 则分发给了后端的业务处理服务器进行处理了")])]),t._v(" "),n("h3",{attrs:{id:"使用-反向代理服务器的优点是什么"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用-反向代理服务器的优点是什么"}},[t._v("#")]),t._v(" 使用 “反向代理服务器的优点是什么?")]),t._v(" "),n("ul",[n("li",[t._v("反向代理服务器可以隐藏源服务器的存在和特征。它充当互联网云和 web 服务器之间的中间层。这对于安全方面来说是很好的，特别是当您使用 web 托管服务时。")])]),t._v(" "),n("h3",{attrs:{id:"nginx-的优缺点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx-的优缺点"}},[t._v("#")]),t._v(" Nginx 的优缺点？")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("优点：")]),t._v(" "),n("ol",[n("li",[t._v("占内存小，可实现高并发连接，处理响应快")]),t._v(" "),n("li",[t._v("可实现 http 服务器、虚拟主机、方向代理、负载均衡")]),t._v(" "),n("li",[t._v("Nginx 配置简单")]),t._v(" "),n("li",[t._v("可以不暴露正式的服务器 IP 地址")])])]),t._v(" "),n("li",[n("p",[t._v("缺点： 动态处理差：nginx 处理静态文件好, 耗费内存少，但是处理动态页面则很鸡肋，现在一般前端用 nginx 作为反向代理抗住压力，")])])]),t._v(" "),n("h3",{attrs:{id:"nginx-应用场景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx-应用场景"}},[t._v("#")]),t._v(" Nginx 应用场景？")]),t._v(" "),n("ol",[n("li",[t._v("http 服务器。Nginx 是一个 http 服务可以独立提供 http 服务。可以做网页静态服务器。")]),t._v(" "),n("li",[t._v("虚拟主机。可以实现在一台服务器虚拟出多个网站，例如个人网站使用的虚拟机。")]),t._v(" "),n("li",[t._v("反向代理，负载均衡。当网站的访问量达到一定程度后，单台服务器不能满足用户的请求时，需要用多台服务器集群可以使用 nginx 做反向代理。并且多台服务器可以平均分担负载，不会应为某台服务器负载高宕机而某台服务器闲置的情况。")]),t._v(" "),n("li",[t._v("nginz 中也可以配置安全管理、比如可以使用 Nginx 搭建 API 接口网关, 对每个接口服务进行拦截。")])]),t._v(" "),n("h3",{attrs:{id:"nginx-目录结构有哪些"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx-目录结构有哪些"}},[t._v("#")]),t._v(" Nginx 目录结构有哪些？")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("[root@localhost ~]\n/usr/local/nginx\n├── client_body_temp\n├── conf\n│   ├── fastcgi.conf\n│   ├── fastcgi.conf.default\n│   ├── fastcgi_params\n│   ├── fastcgi_params.default\n│   ├── koi-utf\n│   ├── koi-win\n│   ├── mime.types\n│   ├── mime.types.default\n│   ├── nginx.conf\n│   ├── nginx.conf.default\n│   ├── scgi_params\n│   ├── scgi_params.default\n│   ├── uwsgi_params\n│   ├── uwsgi_params.default\n│   └── win-utf\n├── fastcgi_temp\n├── html\n│   ├── 50x.html\n│   └── index.html\n├── logs\n│   ├── access.log\n│   ├── error.log\n│   └── nginx.pid\n├── proxy_temp\n├── sbin\n│   └── nginx\n├── scgi_temp\n└── uwsgi_temp\n复制代码\n\n")])])]),n("h3",{attrs:{id:"nginx-配置文件-nginx-conf-有哪些属性模块"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx-配置文件-nginx-conf-有哪些属性模块"}},[t._v("#")]),t._v(" Nginx 配置文件 nginx.conf 有哪些属性模块?")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("worker_processes  1；\nevents {\n    worker_connections  1024；\n}\nhttp {\n    include       mime.types；\n    default_type  application/octet-stream；\n    sendfile        on；\n    keepalive_timeout  65；\n    server {\n        listen       80；\n        server_name  localhost；\n        location / {\n            root   html；\n            index  index.html index.htm；\n        }\n        error_page   500502503504  /50x.html；\n        location = /50x.html {\n            root   html；\n        }\n    }\n    ......\n复制代码\n\n")])])]),n("h3",{attrs:{id:"nginx-静态资源"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx-静态资源"}},[t._v("#")]),t._v(" Nginx 静态资源?")]),t._v(" "),n("ul",[n("li",[t._v("静态资源访问，就是存放在 nginx 的 html 页面，我们可以自己编写")])]),t._v(" "),n("h3",{attrs:{id:"如何用-nginx-解决前端跨域问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#如何用-nginx-解决前端跨域问题"}},[t._v("#")]),t._v(" 如何用 Nginx 解决前端跨域问题？")]),t._v(" "),n("ul",[n("li",[t._v("使用 Nginx 转发请求。把跨域的接口写成调本域的接口，然后将这些接口转发到真正的请求地址。")])]),t._v(" "),n("h3",{attrs:{id:"nginx-虚拟主机怎么配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx-虚拟主机怎么配置"}},[t._v("#")]),t._v(" Nginx 虚拟主机怎么配置?")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("1、基于域名的虚拟主机，通过域名来区分虚拟主机——应用：外部网站")])]),t._v(" "),n("li",[n("p",[t._v("2、基于端口的虚拟主机，通过端口来区分虚拟主机——应用：公司内部网站，外部网站的管理后台")])]),t._v(" "),n("li",[n("p",[t._v("3、基于 ip 的虚拟主机。")])])]),t._v(" "),n("h4",{attrs:{id:"基于虚拟主机配置域名"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基于虚拟主机配置域名"}},[t._v("#")]),t._v(" 基于虚拟主机配置域名")]),t._v(" "),n("ul",[n("li",[t._v("需要建立 / data/www /data/bbs 目录，windows 本地 hosts 添加虚拟机 ip 地址对应的域名解析；对应域名网站目录下新增 index.html 文件；")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("    server {\n        listen       80;\n        server_name  www.lijie.com;\n        location / {\n            root   data/www;\n            index  index.html index.htm;\n        }\n    }\n\n    server {\n        listen       80;\n        server_name  bbs.lijie.com;\n        location / {\n            root   data/bbs;\n            index  index.html index.htm;\n        }\n    }\n复制代码\n\n")])])]),n("h4",{attrs:{id:"基于端口的虚拟主机"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基于端口的虚拟主机"}},[t._v("#")]),t._v(" 基于端口的虚拟主机")]),t._v(" "),n("ul",[n("li",[t._v("使用端口来区分，浏览器使用域名或 ip 地址: 端口号 访问")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("    server {\n        listen       8080;\n        server_name  8080.lijie.com;\n        location / {\n            root   data/www;\n            index  index.html index.htm;\n        }\n    }\n\n    server {\n        listen       80;\n        server_name  www.lijie.com;\n        location / {\n\t\tproxy_pass http://127.0.0.1:8080;\n                index  index.html index.htm;\n        }\n    }\n复制代码\n\n")])])]),n("h3",{attrs:{id:"location-的作用是什么"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#location-的作用是什么"}},[t._v("#")]),t._v(" location 的作用是什么？")]),t._v(" "),n("ul",[n("li",[t._v("location 指令的作用是根据用户请求的 URI 来执行不同的应用，也就是根据用户请求的网站 URL 进行匹配，匹配成功即进行相关的操作。")])]),t._v(" "),n("h4",{attrs:{id:"location-的语法能说出来吗"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#location-的语法能说出来吗"}},[t._v("#")]),t._v(" location 的语法能说出来吗？")]),t._v(" "),n("blockquote",[n("p",[t._v("注意：~ 代表自己输入的英文字母")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("匹配符")]),n("th",[t._v("匹配规则")]),n("th",[t._v("优先级")])])]),n("tbody",[n("tr",[n("td",[t._v("=")]),n("td",[t._v("精确匹配")]),n("td",[t._v("1")])]),n("tr",[n("td",[t._v("^~")]),n("td",[t._v("以某个字符串开头")]),n("td",[t._v("2")])]),n("tr",[n("td",[t._v("~")]),n("td",[t._v("区分大小写的正则匹配")]),n("td",[t._v("3")])]),n("tr",[n("td",[t._v("~*")]),n("td",[t._v("不区分大小写的正则匹配")]),n("td",[t._v("4")])]),n("tr",[n("td",[t._v("!~")]),n("td",[t._v("区分大小写不匹配的正则")]),n("td",[t._v("5")])]),n("tr",[n("td",[t._v("!~*")]),n("td",[t._v("不区分大小写不匹配的正则")]),n("td",[t._v("6")])]),n("tr",[n("td",[t._v("/")]),n("td",[t._v("通用匹配，任何请求都会匹配到")]),n("td",[t._v("7")])])])])]),t._v(" "),n("h4",{attrs:{id:"location-正则案例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#location-正则案例"}},[t._v("#")]),t._v(" Location 正则案例")]),t._v(" "),n("ul",[n("li",[t._v("示例：")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("    location =/ {\n        return 400;\n    }\n\n    location ^~ /av {\n       root /data/av/;\n    }\n\n    location ~ /media {\n          alias /data/static/;\n    }\n\n    location ~* .*\\.(jpg|gif|png|js|css)$ {\n       root  /data/av/;\n    }\n\n    location / {\n        return 403;\n    }\n复制代码\n\n")])])]),n("h3",{attrs:{id:"限流怎么做的"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#限流怎么做的"}},[t._v("#")]),t._v(" 限流怎么做的？")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("Nginx 限流就是限制用户请求速度，防止服务器受不了")])]),t._v(" "),n("li",[n("p",[t._v("限流有 3 种")]),t._v(" "),n("ol",[n("li",[t._v("正常限制访问频率（正常流量）")]),t._v(" "),n("li",[t._v("突发限制访问频率（突发流量）")]),t._v(" "),n("li",[t._v("限制并发连接数")])])]),t._v(" "),n("li",[n("p",[t._v("Nginx 的限流都是基于漏桶流算法，底下会说道什么是桶铜流")])])]),t._v(" "),n("p",[n("strong",[t._v("实现三种限流算法")])]),t._v(" "),n("h5",{attrs:{id:"_1、正常限制访问频率-正常流量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、正常限制访问频率-正常流量"}},[t._v("#")]),t._v(" 1、正常限制访问频率（正常流量）：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("限制一个用户发送的请求，我 Nginx 多久接收一个请求。")])]),t._v(" "),n("li",[n("p",[t._v("Nginx 中使用 ngx_http_limit_req_module 模块来限制的访问频率，限制的原理实质是基于漏桶算法原理来实现的。在 nginx.conf 配置文件中可以使用 limit_req_zone 命令及 limit_req 命令限制单个 IP 的请求处理频率。")])])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\tlimit_req_zone $binary_remote_addr zone=one:10m rate=1r/m;\n\n\tserver{\n\n\t\tlocation/seckill.html{\n\t\t\tlimit_req zone=zone;\n\t\t\tproxy_pass http://lj_seckill;\n\t\t}\n\n\t}\n复制代码\n\n")])])]),n("ul",[n("li",[t._v("1r/s 代表 1 秒一个请求，1r/m 一分钟接收一个请求， 如果 Nginx 这时还有别人的请求没有处理完，Nginx 就会拒绝处理该用户请求。")])]),t._v(" "),n("h5",{attrs:{id:"_2、突发限制访问频率-突发流量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、突发限制访问频率-突发流量"}},[t._v("#")]),t._v(" 2、突发限制访问频率（突发流量）：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("限制一个用户发送的请求，我 Nginx 多久接收一个。")])]),t._v(" "),n("li",[n("p",[t._v("上面的配置一定程度可以限制访问频率，但是也存在着一个问题：如果突发流量超出请求被拒绝处理，无法处理活动时候的突发流量，这时候应该如何进一步处理呢？Nginx 提供 burst 参数结合 nodelay 参数可以解决流量突发的问题，可以设置能处理的超过设置的请求数外能额外处理的请求数。我们可以将之前的例子添加 burst 参数以及 nodelay 参数：")])])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\tlimit_req_zone $binary_remote_addr zone=one:10m rate=1r/m;\n\n\tserver{\n\n\t\tlocation/seckill.html{\n\t\t\tlimit_req zone=zone burst=5 nodelay;\n\t\t\tproxy_pass http://lj_seckill;\n\t\t}\n\n\t}\n复制代码\n\n")])])]),n("ul",[n("li",[t._v("为什么就多了一个 burst=5 nodelay; 呢，多了这个可以代表 Nginx 对于一个用户的请求会立即处理前五个，多余的就慢慢来落，没有其他用户的请求我就处理你的，有其他的请求的话我 Nginx 就漏掉不接受你的请求")])]),t._v(" "),n("h5",{attrs:{id:"_3、-限制并发连接数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3、-限制并发连接数"}},[t._v("#")]),t._v(" 3、 限制并发连接数")]),t._v(" "),n("ul",[n("li",[t._v("Nginx 中的 ngx_http_limit_conn_module 模块提供了限制并发连接数的功能，可以使用 limit_conn_zone 指令以及 limit_conn 执行进行配置。接下来我们可以通过一个简单的例子来看下：")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("    http {\n\tlimit_conn_zone $binary_remote_addr zone=myip:10m;\n\tlimit_conn_zone $server_name zone=myServerName:10m;\n    }\n\n    server {\n        location / {\n            limit_conn myip 10;\n            limit_conn myServerName 100;\n            rewrite / http://www.lijie.net permanent;\n        }\n    }\n复制代码\n\n")])])]),n("ul",[n("li",[t._v("上面配置了单个 IP 同时并发连接数最多只能 10 个连接，并且设置了整个虚拟服务器同时最大并发数最多只能 100 个链接。当然，只有当请求的 header 被服务器处理后，虚拟服务器的连接数才会计数。刚才有提到过 Nginx 是基于漏桶算法原理实现的，实际上限流一般都是基于漏桶算法和令牌桶算法实现的。接下来我们来看看两个算法的介绍：")])]),t._v(" "),n("h3",{attrs:{id:"漏桶流算法和令牌桶算法知道"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#漏桶流算法和令牌桶算法知道"}},[t._v("#")]),t._v(" 漏桶流算法和令牌桶算法知道？")]),t._v(" "),n("h4",{attrs:{id:"漏桶算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#漏桶算法"}},[t._v("#")]),t._v(" 漏桶算法")]),t._v(" "),n("ul",[n("li",[t._v("漏桶算法是网络世界中流量整形或速率限制时经常使用的一种算法，它的主要目的是控制数据注入到网络的速率，平滑网络上的突发流量。漏桶算法提供了一种机制，通过它，突发流量可以被整形以便为网络提供一个稳定的流量。也就是我们刚才所讲的情况。漏桶算法提供的机制实际上就是刚才的案例："),n("strong",[t._v("突发流量会进入到一个漏桶，漏桶会按照我们定义的速率依次处理请求，如果水流过大也就是突发流量过大就会直接溢出，则多余的请求会被拒绝。所以漏桶算法能控制数据的传输速率。")]),t._v(" "),n("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://www.nginx.org.cn/uploads/article/20210224/c31d261813a72af1f7193fbca48a31cb.jpg",loading:"lazy"}})])]),t._v(" "),n("h4",{attrs:{id:"令牌桶算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#令牌桶算法"}},[t._v("#")]),t._v(" 令牌桶算法")]),t._v(" "),n("ul",[n("li",[t._v("令牌桶算法是网络流量整形和速率限制中最常使用的一种算法。典型情况下，令牌桶算法用来控制发送到网络上的数据的数目，并允许突发数据的发送。Google 开源项目 Guava 中的 RateLimiter 使用的就是令牌桶控制算法。"),n("strong",[t._v("令牌桶算法的机制如下：存在一个大小固定的令牌桶，会以恒定的速率源源不断产生令牌。如果令牌消耗速率小于生产令牌的速度，令牌就会一直产生直至装满整个令牌桶。")])])]),t._v(" "),n("p",[n("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://www.nginx.org.cn/uploads/article/20210224/73b3c0de26d2a39c41789457346e3d42.jpg",loading:"lazy"}})]),t._v(" "),n("h3",{attrs:{id:"为什么要做动静分离"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为什么要做动静分离"}},[t._v("#")]),t._v(" 为什么要做动静分离？")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("Nginx 是当下最热的 Web 容器，网站优化的重要点在于静态化网站，网站静态化的关键点则是是动静分离，动静分离是让动态网站里的动态网页根据一定规则把不变的资源和经常变的资源区分开来，动静资源做好了拆分以后，我们则根据静态资源的特点将其做缓存操作。")])]),t._v(" "),n("li",[n("p",[t._v("让静态的资源只走静态资源服务器，动态的走动态的服务器")])]),t._v(" "),n("li",[n("p",[t._v("Nginx 的静态处理能力很强，但是动态处理能力不足，因此，在企业中常用动静分离技术。")])]),t._v(" "),n("li",[n("p",[t._v("对于静态资源比如图片，js，css 等文件，我们则在反向代理服务器 nginx 中进行缓存。这样浏览器在请求一个静态资源时，代理服务器 nginx 就可以直接处理，无需将请求转发给后端服务器 tomcat。 若用户请求的动态文件，比如 servlet,jsp 则转发给 Tomcat 服务器处理，从而实现动静分离。这也是反向代理服务器的一个重要的作用。")])])]),t._v(" "),n("h3",{attrs:{id:"nginx-怎么做的动静分离"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx-怎么做的动静分离"}},[t._v("#")]),t._v(" Nginx 怎么做的动静分离？")]),t._v(" "),n("ul",[n("li",[t._v("只需要指定路径对应的目录。location / 可以使用正则表达式匹配。并指定对应的硬盘中的目录。如下：（操作都是在 Linux 上）")])]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("location /image/ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\troot   /usr/local/static/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tautoindex on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\t\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 复制代码")]),t._v("\n")])])]),n("ol",[n("li",[n("p",[t._v("创建目录")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" /usr/local/static/image\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 复制代码")]),t._v("\n\n")])])])]),t._v(" "),n("li",[n("p",[t._v("进入目录")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("cd  /usr/local/static/image\n复制代码\n\n")])])])]),t._v(" "),n("li",[n("p",[t._v("放一张照片上去#")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("1.jpg\n复制代码\n\n")])])])]),t._v(" "),n("li",[n("p",[t._v("重启 nginx")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("sudo nginx -s reload\n复制代码\n\n")])])])]),t._v(" "),n("li",[n("p",[t._v("打开浏览器 输入 server_name/image/1.jpg 就可以访问该静态图片了")])])]),t._v(" "),n("h3",{attrs:{id:"nginx-负载均衡的算法怎么实现的-策略有哪些"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx-负载均衡的算法怎么实现的-策略有哪些"}},[t._v("#")]),t._v(" Nginx 负载均衡的算法怎么实现的? 策略有哪些?")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("为了避免服务器崩溃，大家会通过负载均衡的方式来分担服务器压力。将对台服务器组成一个集群，当用户访问时，先访问到一个转发服务器，再由转发服务器将访问分发到压力更小的服务器。")])]),t._v(" "),n("li",[n("p",[t._v("Nginx 负载均衡实现的策略有以下五种：")])])]),t._v(" "),n("h4",{attrs:{id:"_1-轮询-默认"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-轮询-默认"}},[t._v("#")]),t._v(" 1 轮询 (默认)")]),t._v(" "),n("ul",[n("li",[t._v("每个请求按时间顺序逐一分配到不同的后端服务器，如果后端某个服务器宕机，能自动剔除故障系统。")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("upstream backserver {\n server 192.168.0.12;\n server 192.168.0.13;\n}\n复制代码\n\n")])])]),n("h4",{attrs:{id:"_2-权重-weight"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-权重-weight"}},[t._v("#")]),t._v(" 2 权重 weight")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("weight 的值越大分配")])]),t._v(" "),n("li",[n("p",[t._v("到的访问概率越高，主要用于后端每台服务器性能不均衡的情况下。其次是为在主从的情况下设置不同的权值，达到合理有效的地利用主机资源。")])])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("upstream backserver {\n server 192.168.0.12 weight=2;\n server 192.168.0.13 weight=8;\n}\n复制代码\n\n")])])]),n("ul",[n("li",[t._v("权重越高，在被访问的概率越大，如上例，分别是 20%，80%。")])]),t._v(" "),n("h4",{attrs:{id:"_3-ip-hash-ip-绑定"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-ip-hash-ip-绑定"}},[t._v("#")]),t._v(" 3 ip_hash(IP 绑定)")]),t._v(" "),n("ul",[n("li",[t._v("每个请求按访问 IP 的哈希结果分配，使来自同一个 IP 的访客固定访问一台后端服务器，"),n("code",[t._v("并且可以有效解决动态网页存在的session共享问题")])])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("upstream backserver {\n ip_hash;\n server 192.168.0.12:88;\n server 192.168.0.13:80;\n}\n复制代码\n\n")])])]),n("h4",{attrs:{id:"_4-fair-第三方插件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-fair-第三方插件"}},[t._v("#")]),t._v(" 4 fair(第三方插件)")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("必须安装 upstream_fair 模块。")])]),t._v(" "),n("li",[n("p",[t._v("对比 weight、ip_hash 更加智能的负载均衡算法，fair 算法可以根据页面大小和加载时间长短智能地进行负载均衡，响应时间短的优先分配。")])])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("upstream backserver {\n server server1;\n server server2;\n fair;\n}\n\n复制代码\n\n")])])]),n("ul",[n("li",[t._v("哪个服务器的响应速度快，就将请求分配到那个服务器上。")])]),t._v(" "),n("h4",{attrs:{id:"_5、url-hash-第三方插件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5、url-hash-第三方插件"}},[t._v("#")]),t._v(" 5、url_hash(第三方插件)")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("必须安装 Nginx 的 hash 软件包")])]),t._v(" "),n("li",[n("p",[t._v("按访问 url 的 hash 结果来分配请求，使每个 url 定向到同一个后端服务器，可以进一步提高后端缓存服务器的效率。")])])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("upstream backserver {\n server squid1:3128;\n server squid2:3128;\n hash $request_uri;\n hash_method crc32;\n}\n\n复制代码\n\n")])])]),n("h3",{attrs:{id:"nginx-配置高可用性怎么配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx-配置高可用性怎么配置"}},[t._v("#")]),t._v(" Nginx 配置高可用性怎么配置？")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("当上游服务器 (真实访问服务器)，一旦出现故障或者是没有及时相应的话，应该直接轮训到下一台服务器，保证服务器的高可用")])]),t._v(" "),n("li",[n("p",[t._v("Nginx 配置代码：")])])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("server {\n        listen       80;\n        server_name  www.lijie.com;\n        location / {\n\n\t\t    proxy_pass http://backServer;\n\n\t\t\tproxy_connect_timeout 1s;\n\n            proxy_send_timeout 1s;\n\n            proxy_read_timeout 1s;\n            index  index.html index.htm;\n        }\n    }\n\n\n复制代码\n\n")])])]),n("h3",{attrs:{id:"nginx-怎么判断别-ip-不可访问"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx-怎么判断别-ip-不可访问"}},[t._v("#")]),t._v(" Nginx 怎么判断别 IP 不可访问？")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("if  ($remote_addr = 192.168.9.115) {\n     return 403;\n}\n复制代码\n\n")])])]),n("h3",{attrs:{id:"怎么限制浏览器访问"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#怎么限制浏览器访问"}},[t._v("#")]),t._v(" 怎么限制浏览器访问？")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("if ($http_user_agent ~ Chrome) {\n    return 500;\n}\n复制代码\n\n")])])]),n("h3",{attrs:{id:"rewrite-全局变量是什么"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#rewrite-全局变量是什么"}},[t._v("#")]),t._v(" Rewrite 全局变量是什么？")]),t._v(" "),n("blockquote",[n("table",[n("thead",[n("tr",[n("th",[t._v("变量")]),n("th",[t._v("含义")])])]),n("tbody",[n("tr",[n("td",[t._v("$args")]),n("td",[t._v("这个变量等于请求行中的参数，同 $query_string")])]),n("tr",[n("td",[t._v("$content length")]),n("td",[t._v("请求头中的 Content-length 字段。")])]),n("tr",[n("td",[t._v("$content_type")]),n("td",[t._v("请求头中的 Content-Type 字段。")])]),n("tr",[n("td",[t._v("$document_root")]),n("td",[t._v("当前请求在 root 指令中指定的值。")])]),n("tr",[n("td",[t._v("$host")]),n("td",[t._v("请求主机头字段，否则为服务器名称。")])]),n("tr",[n("td",[t._v("$http_user_agent")]),n("td",[t._v("客户端 agent 信息")])]),n("tr",[n("td",[t._v("$http_cookie")]),n("td",[t._v("客户端 cookie 信息")])]),n("tr",[n("td",[t._v("$limit_rate")]),n("td",[t._v("这个变量可以限制连接速率。")])]),n("tr",[n("td",[t._v("$request_method")]),n("td",[t._v("客户端请求的动作，通常为 GET 或 POST。")])]),n("tr",[n("td",[t._v("$remote_addr")]),n("td",[t._v("客户端的 IP 地址。")])]),n("tr",[n("td",[t._v("$remote_port")]),n("td",[t._v("客户端的端口。")])]),n("tr",[n("td",[t._v("$remote_user")]),n("td",[t._v("已经经过 Auth Basic Module 验证的用户名。")])]),n("tr",[n("td",[t._v("$request_filename")]),n("td",[t._v("当前请求的文件路径，由 root 或 alias 指令与 URI 请求生成。")])]),n("tr",[n("td",[t._v("$scheme")]),n("td",[t._v("HTTP 方法（如 http，https）。")])]),n("tr",[n("td",[t._v("$server_protocol")]),n("td",[t._v("请求使用的协议，通常是 HTTP/1.0 或 HTTP/1.1。")])]),n("tr",[n("td",[t._v("$server_addr")]),n("td",[t._v("服务器地址，在完成一次系统调用后可以确定这个值。")])]),n("tr",[n("td",[t._v("$server_name")]),n("td",[t._v("服务器名称。")])]),n("tr",[n("td",[t._v("$server_port")]),n("td",[t._v("请求到达服务器的端口号。")])]),n("tr",[n("td",[t._v("$request_uri")]),n("td",[t._v("包含请求参数的原始 URI，不包含主机名，如”/foo/bar.php?arg=baz”。")])]),n("tr",[n("td",[t._v("$uri")]),n("td",[t._v("不带请求参数的当前 URI，$uri 不包含主机名，如”/foo/bar.html”。")])]),n("tr",[n("td",[t._v("$document_uri")]),n("td",[t._v("与 $uri 相同。")])])])])]),t._v(" "),n("p",[t._v("原文链接：https://www.nginx.org.cn/article/detail/451\n转载来源：NGINX开源社区\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。")]),t._v(" "),n("h2",{attrs:{id:"七、面试题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#七、面试题"}},[t._v("#")]),t._v(" 七、面试题")]),t._v(" "),n("h1",{attrs:{id:"_1、请解释一下什么是-nginx"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、请解释一下什么是-nginx"}},[t._v("#")]),t._v(" 1、请解释一下什么是 Nginx?")]),t._v(" "),n("p",[t._v("Nginx 是一个 web 服务器和反向代理服务器，用于 HTTP、HTTPS、SMTP、POP3和 IMAP 协议。")]),t._v(" "),n("h1",{attrs:{id:"_2、请列举-nginx-的一些特性。"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、请列举-nginx-的一些特性。"}},[t._v("#")]),t._v(" 2、请列举 Nginx 的一些特性。")]),t._v(" "),n("p",[t._v("Nginx 服务器的特性包括：反向代理/L7 负载均衡器 嵌入式 Perl 解释器")]),t._v(" "),n("p",[t._v("动态二进制升级")]),t._v(" "),n("p",[t._v("可用于重新编写 URL，具有非常好的 PCRE 支持")]),t._v(" "),n("h1",{attrs:{id:"_3、请列举-nginx-和-apache-之间的不同点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3、请列举-nginx-和-apache-之间的不同点"}},[t._v("#")]),t._v(" 3、请列举 Nginx 和 Apache 之间的不同点")]),t._v(" "),n("blockquote",[n("p",[n("strong",[t._v("4、请解释 Nginx 如何处理 HTTP 请求。")])])]),t._v(" "),n("p",[t._v("Nginx 使用反应器模式。主事件循环等待操作系统发出准备事件的信号，这样数据就可以从套接字读取，在该实例中读取到缓冲区并进行处理。单个线程可以提供数万个并发连接。")]),t._v(" "),n("h1",{attrs:{id:"_5、在-nginx-中-如何使用未定义的服务器名称来阻止处理请求"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5、在-nginx-中-如何使用未定义的服务器名称来阻止处理请求"}},[t._v("#")]),t._v(" 5、在 Nginx 中，如何使用未定义的服务器名称来阻止处理请求?")]),t._v(" "),n("p",[t._v("只需将请求删除的服务器就可以定义为：")]),t._v(" "),n("p",[t._v("Server {listen 80;server_name “ “ ;return 444;")]),t._v(" "),n("blockquote",[n("p",[t._v("}")])]),t._v(" "),n("p",[t._v("这里，服务器名被保留为一个空字符串，它将在没有“主机”头字段的情况下匹配请求，而一个特殊的 Nginx 的非标准代码 444 被返回，从而终止连接。")]),t._v(" "),n("h1",{attrs:{id:"_6、-使用-反向代理服务器-的优点是什么"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6、-使用-反向代理服务器-的优点是什么"}},[t._v("#")]),t._v(" 6、 使用“反向代理服务器”的优点是什么?")]),t._v(" "),n("p",[t._v("反向代理服务器可以隐藏源服务器的存在和特征。它充当互联网云和 web 服务器之间的中间层。这对于安全方面来说是很好的，特别是当您使用 web 托管服务时。")]),t._v(" "),n("h1",{attrs:{id:"_7、请列举-nginx-服务器的最佳用途。"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7、请列举-nginx-服务器的最佳用途。"}},[t._v("#")]),t._v(" 7、请列举 Nginx 服务器的最佳用途。")]),t._v(" "),n("p",[t._v("Nginx 服务器的最佳用法是在网络上部署动态 HTTP 内容，使用 SCGI、WSGI 应用程序服务器、用于脚本的 FastCGI 处理程序。它还可以作为负载均衡器。")]),t._v(" "),n("h1",{attrs:{id:"_8、请解释-nginx-服务器上的-master-和-worker-进程分别是什么"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8、请解释-nginx-服务器上的-master-和-worker-进程分别是什么"}},[t._v("#")]),t._v(" 8、请解释 Nginx 服务器上的 Master 和 Worker 进程分别是什么?")]),t._v(" "),n("p",[t._v("Master 进程：读取及评估配置和维持 Worker 进程：处理请求")]),t._v(" "),n("h1",{attrs:{id:"_9、请解释你如何通过不同于-80-的端口开启-nginx"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_9、请解释你如何通过不同于-80-的端口开启-nginx"}},[t._v("#")]),t._v(" 9、请解释你如何通过不同于 80 的端口开启 Nginx?")]),t._v(" "),n("p",[t._v("为了通过一个不同的端口开启 Nginx，你必须进入/etc/Nginx/sites- enabled/，如果这是默认文件，那么你必须打开名为“default”的文件。编辑文件，并放置在你想要的端口：")]),t._v(" "),n("p",[t._v("Like server { listen 81; }")]),t._v(" "),n("h1",{attrs:{id:"_10、请解释是否有可能将-nginx-的错误替换为-502-错误、503"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_10、请解释是否有可能将-nginx-的错误替换为-502-错误、503"}},[t._v("#")]),t._v(" 10、请解释是否有可能将 Nginx 的错误替换为 502 错误、503?")]),t._v(" "),n("p",[t._v("502 =错误网关")]),t._v(" "),n("p",[t._v("503 =服务器超载")]),t._v(" "),n("p",[t._v("有可能，但是您可以确保 fastcgi_intercept_errors 被设置为 ON，并使用错误页面指令。")]),t._v(" "),n("p",[t._v("Location / {fastcgi_pass 127.0.01:9001;fastcgi_intercept_errors on;error_page 502 =503/error_page.html;#…}")]),t._v(" "),n("h1",{attrs:{id:"_11、在-nginx-中-解释如何在-url-中保留双斜线"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_11、在-nginx-中-解释如何在-url-中保留双斜线"}},[t._v("#")]),t._v(" 11、在 Nginx 中，解释如何在 URL 中保留双斜线?")]),t._v(" "),n("p",[t._v("要在 URL 中保留双斜线，就必须使用 merge_slashes_off;")]),t._v(" "),n("p",[t._v("语法:merge_slashes [on/off]")]),t._v(" "),n("p",[t._v("默认值: merge_slashes on")]),t._v(" "),n("p",[t._v("环境: http，server")]),t._v(" "),n("h1",{attrs:{id:"_12、请解释-ngx-http-upstream-module-的作用是什么"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_12、请解释-ngx-http-upstream-module-的作用是什么"}},[t._v("#")]),t._v(" 12、请解释 ngx_http_upstream_module 的作用是什么?")]),t._v(" "),n("p",[t._v("ngx_http_upstream_module 用于定义可通过 fastcgi 传递、proxy 传递、uwsgi")]),t._v(" "),n("p",[t._v("传递、memcached 传递和 scgi 传递指令来引用的服务器组。")]),t._v(" "),n("h1",{attrs:{id:"_13、请解释什么是-c10k-问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_13、请解释什么是-c10k-问题"}},[t._v("#")]),t._v(" 13、请解释什么是 C10K 问题?")]),t._v(" "),n("p",[t._v("C10K 问题是指无法同时处理大量客户端(10,000)的网络套接字。")]),t._v(" "),n("h1",{attrs:{id:"_14、请陈述-stub-status-和-sub-filter-指令的作用是什么"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_14、请陈述-stub-status-和-sub-filter-指令的作用是什么"}},[t._v("#")]),t._v(" 14、请陈述 stub_status 和 sub_filter 指令的作用是什么?")]),t._v(" "),n("p",[t._v("Stub_status 指令：该指令用于了解 Nginx 当前状态的当前状态，如当前的活动连接，接受和处理当前读/写/等待连接的总数")]),t._v(" "),n("p",[t._v("Sub_filter 指令：它用于搜索和替换响应中的内容，并快速修复陈旧的数据")]),t._v(" "),n("h1",{attrs:{id:"_15、解释-nginx-是否支持将请求压缩到上游"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_15、解释-nginx-是否支持将请求压缩到上游"}},[t._v("#")]),t._v(" 15、解释 Nginx 是否支持将请求压缩到上游?")]),t._v(" "),n("p",[t._v("您可以使用 Nginx 模块 gunzip 将请求压缩到上游。gunzip 模块是一个过滤器，它可以对不支持“gzip”编码方法的客户机或服务器使用“内容编")]),t._v(" "),n("p",[t._v("码:gzip”来解压缩响应。")]),t._v(" "),n("h1",{attrs:{id:"_16、解释如何在-nginx-中获得当前的时间"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_16、解释如何在-nginx-中获得当前的时间"}},[t._v("#")]),t._v(" 16、解释如何在 Nginx 中获得当前的时间?")]),t._v(" "),n("p",[t._v("要获得 Nginx 的当前时间，必须使用 SSI 模块、$date_gmt 和$date_local 的变量。")]),t._v(" "),n("blockquote",[n("p",[t._v("Proxy_set_header THE-TIME $date_gmt; **17、用 Nginx 服务器解释-s 的目的是什么?**用于运行 Nginx -s 参数的可执行文件。 "),n("strong",[t._v("18、解释如何在 Nginx 服务器上添加模块?")])])]),t._v(" "),n("p",[t._v("在编译过程中，必须选择 Nginx 模块，因为 Nginx 不支持模块的运行时间选")]),t._v(" "),n("p",[t._v("择。")]),t._v(" "),n("ol",{attrs:{start:"0"}},[n("li",[n("p",[t._v("请解释一下什么是 Nginx?")])]),t._v(" "),n("li",[n("p",[t._v("请列举 Nginx 的一些特性?")])]),t._v(" "),n("li",[n("p",[t._v("请列举 Nginx 和 Apache 之间的不同点?")])]),t._v(" "),n("li",[n("p",[t._v("请解释 Nginx 如何处理 HTTP 请求。")])]),t._v(" "),n("li",[n("p",[t._v("在 Nginx 中，如何使用未定义的服务器名称来阻止处理请求?")])]),t._v(" "),n("li",[n("p",[t._v("使用“反向代理服务器”的优点是什么?")])]),t._v(" "),n("li",[n("p",[t._v("请列举 Nginx 服务器的最佳用途。")])]),t._v(" "),n("li",[n("p",[t._v("请解释 Nginx 服务器上的 Master 和 Worker 进程分别是什么?")])]),t._v(" "),n("li",[n("p",[t._v("请解释你如何通过不同于 80 的端口开启 Nginx?")])]),t._v(" "),n("li",[n("p",[t._v("请解释是否有可能将 Nginx 的错误替换为 502 错误、503?")])]),t._v(" "),n("li",[n("p",[t._v("在 Nginx 中，解释如何在 URL 中保留双斜线?")])]),t._v(" "),n("li",[n("p",[t._v("请解释 ngx_http_upstream_module 的作用是什么?")])]),t._v(" "),n("li",[n("p",[t._v("请解释什么是 C10K 问题，后来是怎么解决的？")])]),t._v(" "),n("li",[n("p",[t._v("请陈述 stub_status 和 sub_filter 指令的作用是什么?")])]),t._v(" "),n("li",[n("p",[t._v("解释Nginx 是否支持将请求压缩到上游?")])]),t._v(" "),n("li",[n("p",[t._v("解释如何在 Nginx 中获得当前的时间?")])]),t._v(" "),n("li",[n("p",[t._v("用 Nginx 服务器解释-s 的目的是什么?")])]),t._v(" "),n("li",[n("p",[t._v("解释如何在 Nginx 服务器上添加模块?")])]),t._v(" "),n("li",[n("p",[t._v("nginx 中多个 work 进程是如何监听同一个端口的？如何处理客户连接的惊群问题？")])]),t._v(" "),n("li",[n("p",[t._v("nginx 程序的热更新是如何做的？")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);